# go-shopping-practice Docker Compose 설정
# nugu 프로젝트의 인프라를 재사용하되 독립적인 구성
version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: shopping-postgres
    restart: always
    ports:
      - "5433:5432"  # nugu와 포트 충돌 방지
    environment:
      POSTGRES_USER: shopping_user
      POSTGRES_PASSWORD: shopping_pass
      POSTGRES_DB: shopping_practice
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - shopping-net

  redis:
    image: redis:latest
    container_name: shopping-redis
    restart: always
    ports:
      - "6380:6379"  # nugu와 포트 충돌 방지
    volumes:
      - ./docker/redis/data:/data
    command: redis-server --appendonly yes
    networks:
      - shopping-net

  kafka:
    image: confluentinc/cp-kafka:7.8.1
    container_name: shopping-kafka
    ports:
      - "9093:9092"  # nugu와 포트 충돌 방지
      - "9094:9093"
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093,INTERNAL://kafka:29092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: shopping-kafka
    volumes:
      - ./docker/kafka/data:/var/lib/kafka/data
    networks:
      - shopping-net

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.1
    container_name: shopping-schema-registry
    depends_on:
      - kafka
    ports:
      - "8082:8081"  # nugu와 포트 충돌 방지
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - shopping-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: shopping-kafka-ui
    restart: always
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "9099:8080"  # nugu와 포트 충돌 방지
    environment:
      KAFKA_CLUSTERS_0_NAME: shopping-local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - shopping-net

  jaeger:
    image: jaegertracing/all-in-one:1.52
    container_name: shopping-jaeger
    restart: always
    ports:
      - "16687:16686"  # Jaeger UI - nugu와 포트 충돌 방지
      - "4318:4317"    # OTLP gRPC - nugu와 포트 충돌 방지
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=memory
      - LOG_LEVEL=debug
    networks:
      - shopping-net

networks:
  shopping-net:
    driver: bridge
